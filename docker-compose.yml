services:
  postgres:
    image: postgres:13
    container_name: socialmediaplatformdesign-postgres-1
    environment:
      POSTGRES_DB: social_media_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:5.0
    container_name: socialmediaplatformdesign-mongo-1
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: socialmediaplatformdesign-redis-1
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 256M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: socialmediaplatformdesign-elasticsearch-1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 1G

  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: social_media_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379

  post_service:
    build:
      context: ./services/post_service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379

  notification_service:
    build:
      context: ./services/notification_service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379

  comment_service:
    build:
      context: ./services/comment_service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379

volumes:
  postgres_data:
  mongo_data:

networks:
  default:
    name: socialmediaplatformdesign_default
